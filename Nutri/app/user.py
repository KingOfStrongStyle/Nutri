from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery, FSInputFile
from aiogram import Router, F
import app.kbds as kb

user = Router()


GUIDE_FILE_ID = None


async def setup_file_id(message: Message):
    global GUIDE_FILE_ID
    file_path = "media/–ù–æ–≤–æ–≥–æ–¥–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç—ã.pdf"
    try:
        document = FSInputFile(file_path)
        msg = await message.answer_document(document)
        GUIDE_FILE_ID = msg.document.file_id  

        await message.answer(f"file_id —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω: {GUIDE_FILE_ID}")
    except FileNotFoundError:
        await message.answer(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: {file_path}")
    except Exception as e:
        await message.answer(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞: {e}")


@user.message(CommandStart())
async def cmd_start(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start. –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª—É—á–∏—Ç—å –≥–∞–π–¥.
    """
    global GUIDE_FILE_ID

    if not GUIDE_FILE_ID:
        await setup_file_id(message)
        return  


    await message.answer_photo(
        photo=FSInputFile('media/IMG_2235.PNG'),
        caption=(
            "<b>üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥–æ–≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞!</b>\n\n"
            "<i>üìö –¢–æ–ª—å–∫–æ –Ω–∞—É—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∏—Ç–∞–Ω–∏–∏.</i>\n\n"
            "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≥–∞–π–¥:\n\n"
            "<b>‚¨áÔ∏è –ì–ê–ô–î üìÑ</b>"
        ),
        parse_mode="HTML",
        reply_markup=kb.main
    )


@user.callback_query(F.data == "get_guide")
async def send_guide(callback_query: CallbackQuery):

    global GUIDE_FILE_ID

    if GUIDE_FILE_ID:
        try:
            await callback_query.message.answer_document(
                document=GUIDE_FILE_ID,
                caption="–í–æ—Ç –≤–∞—à –≥–∞–π–¥ üìÑ"
            )
        except Exception as e:
            await callback_query.message.answer(
                f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞: {e}"
            )
    else:
        await callback_query.message.answer(
            "file_id –µ—â–µ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        )
